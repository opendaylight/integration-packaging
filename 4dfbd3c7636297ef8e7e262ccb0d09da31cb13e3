{
  "comments": [
    {
      "key": {
        "uuid": "fad0f9df_204be82c",
        "filename": "rpm/Vagrantfile",
        "patchSetId": 11
      },
      "lineNbr": 12,
      "author": {
        "id": 2759
      },
      "writtenOn": "2015-10-20T18:13:20Z",
      "side": 1,
      "message": "Would it be better to turn these and below into a single bootstrap.sh script like we do with the infra Vagrantfiles?\n\nThat way the Vagrantfile will stay pretty clean and adding to the script is more simple in that people can just edit the bootstrap script.",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fad0f9df_a0ba78df",
        "filename": "rpm/Vagrantfile",
        "patchSetId": 11
      },
      "lineNbr": 12,
      "author": {
        "id": 1723
      },
      "writtenOn": "2015-10-20T18:48:02Z",
      "side": 1,
      "message": "Definitely an option. In some ways I prefer keeping the VM config logic, since it\u0027s so simple, in the single Vagrantfile. If it was more complex, or if it was a few logical chunks, I\u0027d prefer a of external scripts too. I\u0027ll take a stab at extracting it and see how elegant/inelegant it turns out (tomorrow at the soonest).",
      "parentUuid": "fad0f9df_204be82c",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fad0f9df_40486c2d",
        "filename": "rpm/build.py",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 2759
      },
      "writtenOn": "2015-10-20T18:13:20Z",
      "side": 1,
      "message": "Please run flake8 against this and fix the flake8 issues.",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fad0f9df_c0bf7ccf",
        "filename": "rpm/build.py",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1723
      },
      "writtenOn": "2015-10-20T18:48:02Z",
      "side": 1,
      "message": "ACK, yeah really need to get that tox job setup. Will-do, thanks.",
      "parentUuid": "fad0f9df_40486c2d",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fad0f9df_002ca4aa",
        "filename": "rpm/build.py",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1723
      },
      "writtenOn": "2015-10-20T21:42:06Z",
      "side": 1,
      "message": "We need to make a decision about indenting 2 or 4 spaces. I love being Pythonic, but I also kinda love 2 space indent. Do you have an opinion, Thanh (or anyone else)?",
      "parentUuid": "fad0f9df_c0bf7ccf",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fad0f9df_940536c4",
        "filename": "rpm/build.py",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 2759
      },
      "writtenOn": "2015-10-21T21:11:03Z",
      "side": 1,
      "message": "Personally I prefer to follow guidelines available by the language if possible. If not pick a reasonably large project in that language\u0027s community and follow their standard. For Python it\u0027s generally agreed that pep8 is the way to go so I think we should go with 4 spaces as that is what\u0027s recommended by the Python community. It just makes looking at other project code easier when we follow the same standards.",
      "parentUuid": "fad0f9df_002ca4aa",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fad0f9df_54826e01",
        "filename": "rpm/build.py",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1723
      },
      "writtenOn": "2015-10-21T22:10:11Z",
      "side": 1,
      "message": "Yeah, that\u0027s the main argument for 4 I\u0027m aware of too. Would we also want to closely follow PEP8\u0027s \"Limit all lines to a maximum of 79 characters.\"? Doing 4 space and that really makes for some ugly code imho, very cramped. We didn\u0027t do this in Integration (pre-split), we had a tox rule change to set the max to 120.\n\nIf we\u0027re going to ignore that class of warnings, ignoring E111 (2 vs 4 spaces) isn\u0027t much of a stretch.\n\nI\u0027m partly playing the Devil\u0027s Advocate above, to make sure we\u0027ve thought about those things. I\u0027m not totally sure how I feel about the line length question, but I\u0027m down with strictly following PEP8 for 2 vs 4 spaces.\n\nhttps://www.python.org/dev/peps/pep-0008/#maximum-line-length\nhttps://github.com/opendaylight/integration/blob/master/test/tox.ini#L12",
      "parentUuid": "fad0f9df_940536c4",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fad0f9df_d4c3be36",
        "filename": "rpm/build.py",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 2759
      },
      "writtenOn": "2015-10-21T22:47:17Z",
      "side": 1,
      "message": "I agree regarding line length. In today\u0027s age 79 characters is kind of small and usually set 120 max line.\n\nAnother thing to keep in mind though is the line length is just a guideline and shouldn\u0027t be followed blind. For example there are sometimes perfectly valid reasons for a line going longer than the max line. In these cases pep8 allows you to add a trailing comment \" # noqa\" which will say for that one line, ignore pep8 rules.\n\nIn general though pep8 is good to follow as it\u0027s the standard set by the Python community and via \" # noqa\" allows us to ignore pep8 when it makes sense to do so.\n\nAs for 2 vs 4 spaces. I\u0027d personally prefer to stick with 4 spaces because that\u0027s the standard most python projects follow and as someone who jumps between projects it\u0027s easier for my head to dive into code if things generally look similar when I expect them to.",
      "parentUuid": "fad0f9df_54826e01",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_f41cd615",
        "filename": "rpm/build.py",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1723
      },
      "writtenOn": "2015-10-27T14:53:11Z",
      "side": 1,
      "message": "Just rediscovered this line of PEP8:\n\n\u003e \"Some teams strongly prefer a longer line length. For code maintained exclusively or primarily by a team that can reach agreement on this issue, it is okay to increase the nominal line length from 80 to 100 characters (effectively increasing the maximum length to 99 characters), provided that comments and docstrings are still wrapped at 72 characters.\"\n\n\nhttps://www.python.org/dev/peps/pep-0008/#maximum-line-length\n\nMaybe we should use a 100 char flake8 exception. Still be consistent with PEP8, but get some length relief.",
      "parentUuid": "fad0f9df_d4c3be36",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_673d35bb",
        "filename": "rpm/build_vars.yaml",
        "patchSetId": 11
      },
      "lineNbr": 58,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-10-12T23:13:13Z",
      "side": 1,
      "message": "we have SR2 now.  I can add it as a new patch after this is merged, but how are those change log messages generated?",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_9d169e54",
        "filename": "rpm/build_vars.yaml",
        "patchSetId": 11
      },
      "lineNbr": 58,
      "author": {
        "id": 1723
      },
      "writtenOn": "2015-10-13T18:22:59Z",
      "side": 1,
      "message": "Yeah, we\u0027ll want to add a new build def here for SR2 once we have this refactoring merged. The changelog message is treated like build-specific data, provided once here by a human and then automatically consumed as appropriate in the templates.",
      "parentUuid": "1a76adc5_673d35bb",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fad0f9df_005264dd",
        "filename": "rpm/cache/cache.py",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 2759
      },
      "writtenOn": "2015-10-20T18:13:20Z",
      "side": 1,
      "message": "Please run flake8 against this and fix issues.",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_074c816f",
        "filename": "rpm/connect.sh",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-10-12T23:13:13Z",
      "side": 1,
      "message": "I know this is old code, but now that I\u0027m looking is this loop infinite?  probably should give up after 10-20 seconds from my experience.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 29,
        "endChar": 4
      },
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_3d0d0a3f",
        "filename": "rpm/connect.sh",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 1723
      },
      "writtenOn": "2015-10-13T18:22:59Z",
      "side": 1,
      "message": "The thought is that users will just ctrl+c out if it keeps looping forever, but yeah, it will loop for inf if it doesn\u0027t connect. imho that\u0027s the right design, but no strong opinion.",
      "parentUuid": "1a76adc5_074c816f",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 29,
        "endChar": 4
      },
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fad0f9df_a05ef8e7",
        "filename": "rpm/specs/build_specs.py",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 2759
      },
      "writtenOn": "2015-10-20T18:13:20Z",
      "side": 1,
      "message": "Please run flake8 against this file and fix Python issues.",
      "revId": "4dfbd3c7636297ef8e7e262ccb0d09da31cb13e3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}